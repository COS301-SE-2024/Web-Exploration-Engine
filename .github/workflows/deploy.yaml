name: Deploy 

on:
  push:
    branches: [master, config/deploy]

jobs:
  deploy:
    name: Deploy W.E.E.
    runs-on: ubuntu-latest
    steps:
      - name: Setup repo
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_branch }}
          
      - name: Create credentials file
        run: |
          mkdir -p ${{ github.workspace }}/wee/api-service
          mkdir -p ${{ github.workspace }}/wee/webscraper
          echo "${{ secrets.GOOGLE_CREDENTIALS }}" | base64 --decode > ${{ github.workspace }}/wee/api-service/google-credentials.json
          echo "${{ secrets.GOOGLE_CREDENTIALS }}" | base64 --decode > ${{ github.workspace }}/wee/webscraper/google-credentials.json
          
      - name: Make frontend envfile
        uses: SpicyPizza/create-envfile@v2.0
        with:
          envkey_NEXT_PUBLIC_API_ENDPOINT : ${{secrets.API_ENDPOINT}}
          envkey_NEXT_PUBLIC_SUPABASE_URL : ${{secrets.SUPABASE_URL}}
          envkey_ACCESS_TOKEN : ${{secrets.WEBSCRAPER_API_ACCESS_TOKEN}}
          envkey_NEXT_PUBLIC_SUPABASE_ANON_PUBLIC_KEY : ${{secrets.SUPABASE_ANON_KEY}}
          envkey_NEXT_PUBLIC_SUPABASE_SERVICE_ROLE_KEY : ${{secrets.SUPABASE_SRV_KEY}}
          envkey_REDIS_HOST : ${{secrets.REDIS_HOST}}
          envkey_REDIS_PORT : ${{secrets.REDIS_PORT}}
          envkey_REDIS_PASSWORD : ${{secrets.REDIS_PASSWORD}}
          envkey_PROXY_USERNAME: ${{secrets.PROXY_USERNAME}}
          envkey_PROXY_PASSWORD: ${{secrets.PROXY_PASSWORD}}
          envkey_PROXIES: ${{secreys.PROXIES}}
          envkey_PROXY_PORT: ${{secreys.PROXY_PORT}}
          envkey_TECHNICAL_SEO_API_KEY: ${{secrets.TECHNICAL_SEO_API_KEY}}
          directory: wee/frontend
          file_name: .env
          fail_on_empty: false

      - name: Make webscraper envfile
        uses: SpicyPizza/create-envfile@v2.0
        with:
          envkey_ACCESS_TOKEN : ${{secrets.WEBSCRAPER_API_ACCESS_TOKEN}}
          envkey_NEXT_PUBLIC_SUPABASE_URL : ${{secrets.SUPABASE_URL}}
          envkey_NEXT_PUBLIC_SUPABASE_ANON_PUBLIC_KEY : ${{secrets.SUPABASE_ANON_KEY}}
          envkey_NEXT_PUBLIC_SUPABASE_SERVICE_ROLE_KEY : ${{secrets.SUPABASE_SRV_KEY}}
          envkey_REDIS_HOST : ${{secrets.REDIS_HOST}}
          envkey_REDIS_PORT : ${{secrets.REDIS_PORT}}
          envkey_REDIS_PASSWORD : ${{secrets.REDIS_PASSWORD}}
          envkey_GOOGLE_CLOUD_CREDENTIALS : webscraper/google-credentials.json
          envkey_PROXY_USERNAME: ${{secrets.PROXY_USERNAME}}
          envkey_PROXY_PASSWORD: ${{secrets.PROXY_PASSWORD}}
          envkey_PROXIES: ${{secreys.PROXIES}}
          envkey_PROXY_PORT: ${{secreys.PROXY_PORT}}
          envkey_NEXT_PUBLIC_API_ENDPOINT : ${{secrets.API_ENDPOINT}}
          directory: wee/webscraper
          file_name: .env
          fail_on_empty: false

      - name: Make api-service envfile
        uses: SpicyPizza/create-envfile@v2.0
        with:
          envkey_ACCESS_TOKEN : ${{secrets.WEBSCRAPER_API_ACCESS_TOKEN}}
          envkey_NEXT_PUBLIC_SUPABASE_URL : ${{secrets.SUPABASE_URL}}
          envkey_NEXT_PUBLIC_SUPABASE_ANON_PUBLIC_KEY : ${{secrets.SUPABASE_ANON_KEY}}
          envkey_NEXT_PUBLIC_SUPABASE_SERVICE_ROLE_KEY : ${{secrets.SUPABASE_SRV_KEY}}
          envkey_REDIS_HOST : ${{secrets.REDIS_HOST}}
          envkey_REDIS_PORT : ${{secrets.REDIS_PORT}}
          envkey_REDIS_PASSWORD : ${{secrets.REDIS_PASSWORD}}
          envkey_GOOGLE_CLOUD_CREDENTIALS : api-service/google-credentials.json
          envkey_PROXY_USERNAME: ${{secrets.PROXY_USERNAME}}
          envkey_PROXY_PASSWORD: ${{secrets.PROXY_PASSWORD}}
          envkey_PROXY_PORT: ${{secreys.PROXY_PORT}}
          envkey_PROXIES: ${{secreys.PROXIES}}
          envkey_NEXT_PUBLIC_API_ENDPOINT : ${{secrets.API_ENDPOINT}}
          directory: wee/api-service
          file_name: .env
          fail_on_empty: false
     
      - name: Remove old files
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            if [ -d "wee" ]; then
              rm -r wee
            else
              echo "Directory wee does not exist."
            fi
            
      - name: Upload files to server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          source: "wee"
          target: ./

      - name: Run docker compose
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd wee
            docker compose up --build --detach --force-recreate
